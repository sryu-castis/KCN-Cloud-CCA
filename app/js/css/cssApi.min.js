/**
    Version : CSS_API_DEBUG_0.9.11
*/
var cssApi = (function(){

    var debug = true;
    var group = "CNM_VOD";
    var gtypeMap = {
        "statusinfo": "StatusInfo",
        "update": "Update",
        "move": "Move",
        "recover": "Recover",
        "history": "History",
        "gotoepg": "GoToEPG",
        "check": "Check",
        "startvod": "StartVOD",
        "stopvod": "StopVOD",
        "appdata": "AppData",
        "searchprogram": "SearchProgram",
        "notifystartplay": "NotifyStartPlay",
        "timeout": "Timeout",
        "loadapp": "LoadApp",
        "notifykeypressed" : "NotifyKeyPressed",
        "launchcsapp" : "LaunchCSApp"
    };
    var mac = "init";
    var cssLogUrl = "http://" + window.location.hostname + ":8888/cssLog" ;
    var history = {
        "historyList":{
            "history":[]
        }
    };
    var playInfo = {};
    var playEventId = null;
    var appData = {};

    var debugConsoleMode = "console";

    var cmdlist = {
        "cmdItem" : [{
            "args" : "",
            "title" : "[Noti]StatusInfo",
            "func" : "cssApi.STBNotiStatusInfo",
            "req" : ""
        },{
            "args" : "",
            "title" : "[Noti]Update",
            "func" : "cssApi.STBNotiUpdate",
            "req" : ""
        },{
            "args" : "",
            "title" : "[Req]History(Clear)",
            "func" : "cssApi.STBReqHistoryClear",
            "req" : ""
        },{
            "args" : "100",
            "title" : "[Req]Move(메인 메뉴)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                "entryDomain":"mainMenu",
                "entryPointID":"",
                "entryContext":" "
            }
        },{
            "args" : "101",
            "title" : "[Req]Move(오늘의 추천)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"713228",
                        "entryContext":"오늘의 추천"
                    }
        },{
            "args" : "102",
            "title" : "[Req]Move(영화)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"27282",
                        "entryContext":"영화"
                    }
        },{
            "args" : "103",
            "title" : "[Req]Move(TV다시보기)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"27279",
                        "entryContext":"TV다시보기"
                    }
        },{
            "args" : "104",
            "title" : "[Req]Move(최신드라마 & 예능)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"713231",
                        "entryContext":"최신드라마 & 예능"
                    }
        },{
            "args" : "105",
            "title" : "[Req]Move(애니메이션 & 키즈)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"27281",
                        "entryContext":"애니메이션 & 키즈"
                    }
        },{
            "args" : "106",
            "title" : "[Req]Move(교육 & EBS)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"27280",
                        "entryContext":"교육 & EBS"
                    }
        },{
            "args" : "201",
            "title" : "[Req]Move(쿠폰 & 할인권)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"714175",
                        "entryContext":"쿠폰 & 할인권"
                    }
        },{
            "args" : "202",
            "title" : "[Req]Move(VOD 이용 목록)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"714174",
                        "entryContext":"VOD 이용 목록"
                    }
        },{
            "args" : "203",
            "title" : "[Req]Move(스마트폰 앱 서비스)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"714173",
                        "entryContext":"스마트폰 앱 서비스"
                    }
        },{
            "args" : "204",
            "title" : "[Req]Move(이용자가이드)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"714172",
                        "entryContext":"이용자가이드"
                    }
        },{
            "args" : "301",
            "title" : "[Req]Move(검색)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"search",
                        "entryContext":"null"
                    }
        },{
            "args" : "401",
            "title" : "[Req]Move(외부진입 / List)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"list",
                        "entryPointID":"www.hchoice.co.kr|M0443799LSG272395401",
                        "entryContext":"1"
                    }
        },{
            "args" : "402",
            "title" : "[Req]Move(외부진입 / Detail)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"detail",
                        "entryPointID":"www.hchoice.co.kr|M0454655LSG279667601",
                        "entryContext":"0"
                    }
        },{
            "args" : "403",
            "title" : "[Req]Move(외부진입 / Menu)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"menu",
                        "entryPointID":"27279|142433",
                        "entryContext":"315"
                    }
        },{
            "args" : "501",
            "title" : "[Req]Move(VOD 종료 / 일반)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"closingVOD",
                        "entryPointID":"normal|0.4",
                        "entryContext":"www.hchoice.co.kr|M0224936LFO161331301"
                    },
            "vodType" : "normal",
            "ump" : "0.4"
        },{
            "args" : "502",
            "title" : "[Req]Move(VOD 종료 / EOS)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"closingVOD",
                        "entryPointID":"normal|1",
                        "entryContext":"www.hchoice.co.kr|M0224936LFO161331301"
                    },
            "vodType" : "normal",
            "ump" : "1"
        },{
            "args" : "503",
            "title" : "[Req]Move(VOD 종료 / 미리보기)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"closingVOD",
                        "entryPointID":"preview|-1",
                        "entryContext":"www.hchoice.co.kr|M0447778LSG274730901"
                    },
            "vodType" : "preview",
            "ump" : "-1"
        },{
            "args" : "601",
            "title" : "[Req]Move(MOD 트리거)",
            "func" : "cssApi.STBReqMoveType",
            "req" : {
                        "entryDomain":"MOD",
                        "entryPointID": "MODTrigger",
                        "entryContext":"www.wisepeer.com|T0002671MKM000010686"
                    }
        },{
            "args" : "",
            "title" : "[Req]NotifyStartPlay",
            "func" : "cssApi.STBReqNotifyStartPlay",
            "req" : ""
        },{
            "args" : "",
            "title" : "[CCA]History(All)",
            "func" : "cssApi.CCAReqHistoryAll",
            "req" : ""
        },{
            "args" : "",
            "title" : "[CCA]AppData(get)",
            "func" : "cssApi.getAppData",
            "req" : ""
        }]
    };

    function historyDescSort(data) {
        
        var listLen = data.history.length;
        var targetObj = [];

        for(var i=0; i < listLen; i++) {
            targetObj[i] = data.history[listLen - 1 - i];
        }

        return targetObj;
    }

    function showObj(obj) {
        var str = "";
        for(key in obj) {
            str += key+"="+obj[key]+" | ";
        }
        str.substring(0, str.length - 3);
        return str;
    }

    function debugTarget(msg) {
        var startIdx = msg.indexOf('[') + 1;
        var endIdx = msg.indexOf(']');
        return msg.substring(startIdx, endIdx);

    }

    function debugConsolePrint(msg, obj) {
        
        var target = debugTarget(msg);
        var fontColor = null;

        if(target == 'STB') { fontColor = '#FF0000' } 
        else if(target == 'APP') { fontColor = '#0000FF' }
        else { fontColor = '#000' }

        var logTemplet = "<li style='text-align: left; border-bottom: 1px solid  #069; list-style: none; color: "+ fontColor +"; margin: 0px; padding: 4px; display: block; height: 16px; padding-top: 4px; font-size: 13px; text-decoration: none; width: 930px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; word-wrap: normal'>" + msg + ' / ' + showObj(obj) + "</li>";

        $("#divCssApiConsole").append(logTemplet);

        $("#divCssApiConsole").scrollTop($("#divCssApiConsole")[0].scrollHeight);
    }

    /****************************************************************/
    // cssWrapper를 위한 interface start
    var api = {};
    api.isTV = true;           // CSS 환경 여부
    api.debugConsole = true;
    api.appList = {};            // appList
    api.appKey = {
        "mainUI" : "022000",
        "appPortal" : "022002"
    };

    api.appLoaded = function() {

    };

    api.getCmdList = function() {
        return cmdlist;
    };

    api.debugConsoleModeChange = function() {

        var divCssApiConsole = document.getElementById('divCssApiConsole');
        var consoleStyle = 'height: 250px; width: 960px; top: 600px; left: 0px; opacity: 1; overflow-x:hidden; overflow-y:auto; position: fixed; border-top: 2px solid #069; border-bottom: 2px solid #069; border-right: 2px solid #069; border-left: 2px solid #069; z-index: 3000; background: #fff; margin: 0; padding: 10; font-size: 13px; color: #000';
        var windowStyle = 'height: 250px; width: 300px; top: 290px; left: 660px; opacity: 0.7; overflow-x:hidden; overflow-y:auto; position: fixed; border-top: 2px solid #069; border-bottom: 2px solid #069; border-right: 2px solid #069; border-left: 2px solid #069; z-index: 3000; background: #fff; margin: 0; padding: 10; font-size: 13px; color: #000';

        if(debugConsoleMode == "console") {
            debugConsoleMode = "window";
            divCssApiConsole.style.cssText = windowStyle;
        } else {
            debugConsoleMode = "console";
            divCssApiConsole.style.cssText = consoleStyle;
        }

        this.log(">[Debug][Mode] : " + debugConsoleMode, '');
    };

    api.toggleDebugConsole = function() {
        var returnStr = "Debug Console ON";
        if(this.debugConsole) {
            this.debugConsole = false;
            document.getElementById('divCssApiConsole').style.display="none";
        } else {
            this.debugConsole = true;
            document.getElementById('divCssApiConsole').style.display="";
            returnStr = "Debug Console OFF";
        }

        document.getElementById('btnToggle').innerText = returnStr;
        return returnStr;
    };

    // WebApp(CCA) -> STB / Notification / start
    api.notiKeyInfo = function(data) {
        this.log("> [APP][NOTI]KeyInfo: ", data);
        return true;
    };
    api.notiLaunchApp = function(data) {
        this.log("> [APP][NOTI]LaunchApp: ", data);
        return true;
    };
    api.notiHistory = function(data) {
        if (data.type == "replace") {
            history.historyList.history = historyDescSort(data.historyList);
        }
        this.log("> [APP][NOTI]History [" + data.type + "] : ", data);
        return true;
    };
    api.notiPatch = function() {
        this.log("> [APP][NOTI]Patch");
        return true;
    };
    api.notiUpdate = function(data) {
        this.log("> [APP][NOTI]Update", data);
        return true;
    };
    api.notiGoToChannel = function(data) {
        this.log("> [APP][NOTI]GoToChannel", data);
        return true;
    };
    api.notiHideUI = function(data) {
        this.log("> [APP][NOTI]HideUI", data);
        return true;  
    };
    api.notiGoToTUI = function(data) {
        this.log("> [APP][NOTI]GoToTUI", data);
        return true;
    };
    api.notiOnLoad = function(data) {
        this.log("> [APP][NOTIFY]OnLoad", data);
        return true;
    };

    // WebApp(CCA) -> STB / Notification / end

    // WebApp(CCA) -> STB / Request / Start
    api.reqHistory = function(data, res) {
        if (data.type == "all") {
            if (res == null && history.historyList.length == 0) {
                res = {
                    "historyList":{
                        "history":[{
                            "entryDomain":"DetailViewGroupManager",
                            "entryPointID":"detailView",
                            "entryContext":"{\"targetView\":\"detailView\",\"contentGroupID\":\"292350\"}"
                        },{
                            "entryDomain":"MenuViewGroupManager",
                            "entryPointID":"PosterListView",
                            "entryContext":"{\"vIndex\":0,\"vStartIndex\":0,\"hIndex\":0,\"hStartIndex\":0}"
                        },{
                            "entryDomain":"MenuViewGroupManager",
                            "entryPointID":"categoryListView",
                            "entryContext":"{\"currentCategoryID\":\"707233\",\"rootCategoryName\":\"영화\",\"vIndex\":1,\"vStartIndex\":0,\"currentSubViewType\":\"PosterListView\"}"
                        },{
                            "entryDomain":"MenuViewGroupManager",
                            "entryPointID":"categoryListView",
                            "entryContext":"{\"currentCategoryID\":\"27282\",\"rootCategoryName\":\"영화\",\"vIndex\":3,\"vStartIndex\":0,\"currentSubViewType\":\"previewListView\"}"
                        }]
                    }
                };
            }
            else if(res == null && history.historyList.length != 0) {
                res = history;
            }
        }
        this.log("> [APP][REQ]History [ALL] : ", data);
        this.log("> [STB][RES]History [ALL] : ", res);
        cssWrapper.onResHistory(res);
        return true;
    };
    api.reqGoToEPG = function(res) {
        if (res == null) {
            res = {
                "returnCode": "0"
            };
        }
        this.log("> [APP][REQ]GoToEPG");
        this.log("> [STB][RES]GoToEPG : ", res);
        cssWrapper.onResGoToEPG(res);

        this.STBReqHistoryClear();

        return true;
    };
    api.reqCheck = function(data, res) {
        if (res == null) {
            res = {
                "target": data.target,
                "result": "true"
            }
        }
        this.log("> [APP][REQ]Check : ", data);
        this.log("> [STB][RES]Check : ", res);
        cssWrapper.onResCheck(res);
        return true;
    };
    api.reqStartVOD = function(data, res) {
        playInfo = data;
        if (res == null) {
            res = {
                "result": "0"
            };
        }
        this.log("> [APP][REQ]StartVOD : ", data);
        this.log("> [STB][RES]StartVOD : ", res);
        cssWrapper.onResStartVOD(res);

        if (data.notifyStartPlayTime > -1) {
            setTimeout(function() {
                cssApi.STBReqNotifyStartPlay({
                "assetId":playInfo.assetId,
                    "categoryId":playInfo.categoryId,
                    "productId":playInfo.productId,
                    "goodId":playInfo.goodId
                })
            }, data.notifyStartPlayTime * 1000);
        }
        return true;
    };
    api.reqStopVOD = function(data, res) {
        if (data.action == "stop") {
            if (res == null) {
                res = {
                    "result":"true",
                    "offset":"63927708",
                    "playEventId":playEventId ,
                    "assetId":playInfo.assetId,
                    "playType":playInfo.playType
                }
            }
        }
        else if (data.action == "cancel") {
            res = {
                "result":"false",
                "offset":"0",
                "playEventId":playEventId ,
                "assetId":playInfo.assetId,
                "playType":playInfo.playType
            }
        }
        this.log("> [APP][REQ]StopVOD: " + data);
        this.log("> [STB][RES]StopVOD: " + res);
        cssWrapper.onResStopVOD(res);
        return true;
    };
    api.reqAppData = function(data) {
        var res;
        if (data.type == "get") {
            res = {
                "key": data.key,
                "value" : appData[data.key] ? appData[data.key] : ""
            };
        }
        else if (data.type == "put") {
            
            appData[data.key] = data.value.toString();

            res = {
                "key": data.key,
                "value": appData[data.key]
            };
        }
        this.log("> [APP][REQ]AppData: ", data);
        this.log("> [STB][RES]AppData: ", res);
        cssWrapper.onResAppData(res);
        return true;
    };
    api.getAppData = function() {
        this.log("> [STB]AppData: ", appData);

    };
    api.reqSearchProgram = function(data, res) {
        if (res == null) {
            res = {
                "keyword": data.keyword,
                "transactionId" : data.transactionId,
                "totalCount" : 1,
                "pageSize" : 10,
                "pageIndex" : 1,
                "programList":{
                    "program":{
                        "channelNumber":"11",
                        "channelName":"MBC",
                        "title":"OBS 뉴스 M",
                        "beginDate":"2015-01-21 19:45:00",
                        "endDate":"2015-01-21 20:25:00",
                        "rating":"15",
                        "resolution":"HD"
                    }
                }
            };
        }
        this.log("> [APP][REQ]SearchProgram: ", data);
        this.log("> [STB][RES]SearchProgram: ", res);
        cssWrapper.onResSearchProgram(res);
        return true;
    };
    api.reqTimeout = function(data) {
        var res = {
            "time": data.time
        }
        this.log("> [APP][REQ]Timeout: ", data);
        this.log("> [STB][RES]Timeout: ", res);
        cssWrapper.onResTimeout(res);
        return true;
    };
    api.reqLaunchCSApp = function(data) {
        this.log("> [APP][REQ]LaunchCSApp: ", data);
        return true;
    };
    // WebApp(CCA) -> STB / Request / end

    // WebApp(CCA) -> STB / Response / start
    api.resMove = function(data) {
        this.log("> [APP][RES]Move: ", data);
        return true;
    };
    api.resRecover = function(data) {
        this.log("> [APP][RES]Recover: ", data);
        return true;
    };
    api.resHistory = function(data) {
        this.log("> [APP][RES]History: ", data);
        return true;
    };
    api.resNotifyStartPlay = function(data) {
        playEventId = data.playEventId;
        this.log("> [APP][RES]NotifyStartPlay: ", data);
        return true;
    };
    api.resLoadApp = function(data) {
        this.log("> [APP][RES]LoadApp: ", data);
        return true;
    };
    api.resNotifyKeyPressed = function(data) {
        this.log("> [APP][RES]NotifyKeyPressed: ", data);
        return true;
    };
    api.resNotifyStopVOD = function(data) {
        this.log("> [APP][RES]NotifyStopVOD: ", data);
        return response("NotifyStopVOD", data);
    };
    // WebApp(CCA) -> STB / Response / end


    api.aniPageSlide = function(data) {
        this.log("> aniPageSlide: ", data);
        return true;
    };

    api.aniListSlide = function(data) {
        this.log("> aniListSlide: ", data);
        return true;
    } ;

    api.getAppKey = function(appId, subAppId) {
        for (var appKey in api.appList) {
            if (api.appList[appKey].appId == appId && api.appList[appKey].subAppId == subAppId)
                return appKey;
        }

        return null;
    };
    // cssWrapper를 위한 interface end
    /****************************************************************/

    /****************************************************************/
    // STB -> WebApp(CCA) / Notification / Command / start
    api.STBNotiStatusInfo = function(req) {
        if (req == null) {
            req = {
                "mac":"00:e0:91:93:ac:29",
                "modelNumber":"LSC330-8DCMSK",
                "stbId":"0","SOCode":"0",
                "TSIDList":"11111, 22222, 33333, 44444, 55555, 66666, 77777, 88888, 99999, 00000",
                "smartCardId":"-1",
                "callCenterPhoneNumber":"1644-1100",
                "currentParentalRating":"0",
                "cscVersion" : "V.1.0.101",
                "cssIp" : "101.192.158.2"       
            };
        }
        this.log("> [STB][NOTI]StatusInfo: ", req);
        cssWrapper.onNotiStatusInfo(req);
    };
    api.STBNotiUpdate = function(req) {
        if (req == null) {
            req = {
                "target": "currentParentalRating",
                "value": "19"
            };
        }
        this.log("> [STB][NOTI]Update: ", req);
        cssWrapper.onNotiUpdate(req);
    };
    // STB -> WebApp(CCA) / Notification / Command / end

    // STB -> WebApp(CCA) / Request / Command / start
    api.STBReqMove = function(req) {
        if (req == null) {
            req = {
                "entryDomain":"menu",
                "entryPointID":"27282",
                "entryContext":"영화"
            };
        }
        this.log("> [STB][REQ]Move: ", req);
        cssWrapper.onReqMove(req);
    };
    
    api.STBReqMoveType = function(type, param) {

        var req = null;
        var cmdlistLen = cmdlist.cmdItem.length;

        for(var i=0; i < cmdlistLen; i++)
        {
            if(cmdlist.cmdItem[i].func == "cssApi.STBReqMoveType" && cmdlist.cmdItem[i].args == type.toString()) {
                if(cmdlist.cmdItem[i].req.entryDomain == "closingVOD")
                {
                    cmdlist.cmdItem[i].req = {
                        "entryDomain":"closingVOD",
                        "entryPointID":(playInfo.playType ? playInfo.playType : cmdlist.cmdItem[i].vodType) + "|" + (param ? param : cmdlist.cmdItem[i].ump),
                        "entryContext":playInfo.assetId ? playInfo.assetId : "www.hchoice.co.kr|M0224936LFO161331301"
                    };   
                }
                req = cmdlist.cmdItem[i].req;
                break;
            }
        }

        if(req == null) {
            req = {
                    errorMessage : "Not Define Type",
                    TypeDesc : []
            };

            for(var i=0; i < cmdlistLen; i++)
            {
                if(cmdlist.cmdItem[i].func == "cssApi.STBReqMoveType") {
                    req.TypeDesc[cmdlist.cmdItem[i].args] = cmdlist.cmdItem[i].title;    
                }
            }
        }

        this.log("> [STB][REQ]Move: ", req);
        cssWrapper.onReqMove(req);
    };

    api.STBReqRecover = function(req) {
        if (req == null) {
            req = {
                "historyList":{
                    "history":[{
                        "entryDomain":"DetailViewGroupManager",
                        "entryPointID":"detailView",
                        "entryContext":"{\"targetView\":\"detailView\",\"contentGroupID\":\"292350\"}"
                    },{
                        "entryDomain":"MenuViewGroupManager",
                        "entryPointID":"PosterListView",
                        "entryContext":"{\"vIndex\":0,\"vStartIndex\":0,\"hIndex\":0,\"hStartIndex\":0}"
                    },{
                        "entryDomain":"MenuViewGroupManager",
                        "entryPointID":"categoryListView",
                        "entryContext":"{\"currentCategoryID\":\"707233\",\"rootCategoryName\":\"영화\",\"vIndex\":1,\"vStartIndex\":0,\"currentSubViewType\":\"PosterListView\"}"
                    },{
                        "entryDomain":"MenuViewGroupManager",
                        "entryPointID":"categoryListView",
                        "entryContext":"{\"currentCategoryID\":\"27282\",\"rootCategoryName\":\"영화\",\"vIndex\":3,\"vStartIndex\":0,\"currentSubViewType\":\"previewListView\"}"
                    }]
                }
            };
        }
        this.log("> [STB][REQ]Recover: ", req);
        cssWrapper.onReqMove(req);
    };
    
    api.STBReqHistoryClear = function(req) {
        if (req == null) {
            req = {
                "type": "clear"
            };
        }
        this.log("> [STB][REQ]History: ", req);
        cssWrapper.onReqHistory(req);
    };

    api.STBReqHistoryAll = function(req) {
        if (req == null) {
            req = {
                "type": "all"
            };
        }
        this.log("> [STB][REQ]History: ", req);
        cssWrapper.onReqHistory(req);
    };

    api.STBReqNotifyStartPlay = function(req) {
        if (req == null) {
            req = {
                "assetId":"www.hchoice.co.kr|M0224936LFO161331301",
                "categoryId":"www.hchoice.co.kr|M0224936LFO161331301",
                "productId":"622",
                "goodId":"684244"
            };
        }
        this.log("> [STB][REQ]NotifyStartPlay: ", req);
        cssWrapper.onReqNotifyStartPlay(req);
    };
    // STB -> WebApp(CCA) / Request /  Command / end

    // WebApp(CCA) -> STB / Reqeust /  Command / start
    api.CCAReqHistoryAll = function(req) {
        
        var data = {"type":"all"};

        //this.log("> [APP][REQ]History: ", data);
        this.reqHistory(data, req);
    };
    // WebApp(CCA) -> STB / Reqeust /  Command / end

    /****************************************************************/
    // cssApi 내부함수 start
    var init = function() {

        // app 객체(Web Container)는 CSS 환경에서만 존재
        api.isTV = true;
    };

    var log = function(msg, obj) {
        console.log("%c[cssApi] " + msg, 'color:red; font-weight:bold', obj);

        if(api.debugConsole) {
            debugConsolePrint(msg, obj);
        }
    };
    // cssApi 내부함수 end
    /****************************************************************/

    init();
    api.log = log;

    return api;
})();


$(document).ready(function(){

    var cssApiCmdList = cssApi.getCmdList();
    var htmlStr = '';
    var cssApiCmdListLen = cssApiCmdList.cmdItem.length;
    var doc = document;
    var docFragment = document.createDocumentFragment();

    var divCssApiConsole = null;
    var CssApiConsoleLogData = [];

    var divCssApiMenu = document.createElement('div');
    divCssApiMenu.id = 'cssApiMenu';
    divCssApiMenu.style.cssText = 'position: fixed; width: 250px; top: 10px; left: 1000px; border-top: 5px solid #069; border-bottom: 4px solid #069; z-index: 3000; background: #fff; line-height: 1.5em; margin: 0; padding: 0';
    docFragment.appendChild(divCssApiMenu);

    var divUlCssApiMenu = document.createElement('ul');
    divUlCssApiMenu.style.cssText = 'margin: 0px; padding: 0px';
    divCssApiMenu.appendChild(divUlCssApiMenu);

    for(var i=0; i < cssApiCmdListLen; i++)
    {
        htmlStr += "<li id=btn" + i + " onclick=" + cssApiCmdList.cmdItem[i].func + "(" + cssApiCmdList.cmdItem[i].args + ") style='text-align: left; border-bottom: 1px solid  #069; list-style: none; color: #000; margin: 0px; padding: 0px;'><a style='display: block; height: 26px; padding-top: 4px; font-size: 13px; text-decoration: none'>" + cssApiCmdList.cmdItem[i].title + "</a> </li>";
    }

    htmlStr += "<li style='text-align: center; border-bottom: 1px solid  #069; list-style: none; color: #000; margin: 0px; padding: 0px; height: 30px; padding-top: 5px'> <button id='btnToggle' onclick=cssApi.toggleDebugConsole() style='height: 25px;'>Debug Console ON</button></li>";
    htmlStr += "<li style='text-align: center; border-bottom: 1px solid  #069; list-style: none; color: #000; margin: 0px; padding: 0px; height: 30px; padding-top: 5px'> <button id='btnToggle' onclick=cssApi.debugConsoleModeChange() style='height: 25px;'>Debug View Change</button></li>";

    divUlCssApiMenu.innerHTML = htmlStr;

    if(cssApi.debugConsole) {
        divCssApiConsole = document.createElement('div');
        divCssApiConsole.id = 'divCssApiConsole';
        divCssApiConsole.style.cssText = 'overflow-x:hidden; overflow-y:auto; position: fixed; height: 250px; width: 960px; top: 600px; left: 0px; border-top: 2px solid #069; border-bottom: 2px solid #069; border-right: 2px solid #069; border-left: 2px solid #069; z-index: 3000; background: #fff; margin: 0; padding: 10; font-size: 13px; color: #000';
        docFragment.appendChild(divCssApiConsole);

        var divUlCssApiConsole = document.createElement('ul');
        divUlCssApiConsole.style.cssText = 'margin: 0px; padding: 0px';
        divCssApiConsole.appendChild(divUlCssApiConsole);
    }
    
    doc.body.appendChild(docFragment);
  
    $("#cssApiMenu > ul > li").hover(function(){
        $("#" + this.id).css("background", "#93F1FD");
        $("#" + this.id).css("font-weight", "bold");
        $("#" + this.id).css("letter-spacing", "-1px");
        },function(){
        $("#" + this.id).css("background", "#fff");
        $("#" + this.id).css("font-weight", "normal");
        $("#" + this.id).css("letter-spacing", "0px");
    });
});